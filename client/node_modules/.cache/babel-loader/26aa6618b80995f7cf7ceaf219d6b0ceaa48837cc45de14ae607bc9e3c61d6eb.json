{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\shesecure\\\\client\\\\src\\\\components\\\\TripStatusPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TripStatusPanel = ({\n  tripDetails,\n  onEndTrip\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  // This effect sets up a timer to track the trip duration\n  useEffect(() => {\n    const timer = setInterval(() => {\n      // Calculate elapsed seconds from the start time\n      setElapsedTime(Math.floor((new Date() - tripDetails.startTime) / 1000));\n    }, 1000);\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(timer);\n  }, [tripDetails]); // Dependency array ensures the timer restarts if the trip changes\n\n  // Function to format seconds into MM:SS format\n  const formatTime = totalSeconds => {\n    const minutes = String(Math.floor(totalSeconds / 60)).padStart(2, '0');\n    const seconds = String(totalSeconds % 60).padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n\n  // This function will copy the sharable trip link to the clipboard\n  const handleShareTrip = () => {\n    // In a real app, this link would be generated by your backend\n    const shareableLink = `https://yoursite.com/track/${tripDetails.id}`;\n    navigator.clipboard.writeText(shareableLink);\n    alert(`Sharable link copied to clipboard:\\n${shareableLink}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trip-status-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Trip in Progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Elapsed Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-trip-button\",\n        onClick: handleShareTrip,\n        children: \"Share Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-trip-button\",\n        onClick: onEndTrip,\n        children: \"End Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TripStatusPanel, \"qjUdXD44Xrq0jX4C+PAAtl9dcYI=\");\n_c = TripStatusPanel;\nexport default TripStatusPanel;\nvar _c;\n$RefreshReg$(_c, \"TripStatusPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TripStatusPanel","tripDetails","onEndTrip","_s","elapsedTime","setElapsedTime","timer","setInterval","Math","floor","Date","startTime","clearInterval","formatTime","totalSeconds","minutes","String","padStart","seconds","handleShareTrip","shareableLink","id","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/shesecure/client/src/components/TripStatusPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TripStatusPanel = ({ tripDetails, onEndTrip }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n\r\n  // This effect sets up a timer to track the trip duration\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      // Calculate elapsed seconds from the start time\r\n      setElapsedTime(Math.floor((new Date() - tripDetails.startTime) / 1000));\r\n    }, 1000);\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => clearInterval(timer);\r\n  }, [tripDetails]); // Dependency array ensures the timer restarts if the trip changes\r\n\r\n  // Function to format seconds into MM:SS format\r\n  const formatTime = (totalSeconds) => {\r\n    const minutes = String(Math.floor(totalSeconds / 60)).padStart(2, '0');\r\n    const seconds = String(totalSeconds % 60).padStart(2, '0');\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n  \r\n  // This function will copy the sharable trip link to the clipboard\r\n  const handleShareTrip = () => {\r\n    // In a real app, this link would be generated by your backend\r\n    const shareableLink = `https://yoursite.com/track/${tripDetails.id}`;\r\n    navigator.clipboard.writeText(shareableLink);\r\n    alert(`Sharable link copied to clipboard:\\n${shareableLink}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"trip-status-panel\">\r\n      <h3>Trip in Progress...</h3>\r\n      <div className=\"timer\">\r\n        <p>Elapsed Time</p>\r\n        <span>{formatTime(elapsedTime)}</span>\r\n      </div>\r\n      <div className=\"trip-actions\">\r\n        <button className=\"share-trip-button\" onClick={handleShareTrip}>Share Trip</button>\r\n        <button className=\"end-trip-button\" onClick={onEndTrip}>End Trip</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripStatusPanel;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}