{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\shesecure\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\n// --- STYLES (Self-Contained) ---\n// By embedding the styles here, we guarantee they are loaded and applied correctly.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardStyles = () => /*#__PURE__*/_jsxDEV(\"style\", {\n  children: `\n    .dashboard-container {\n      display: flex;\n      flex-direction: column;\n      /* This is the crucial line: it makes the container fill the vertical space\n         left by your 70px header. */\n      height: calc(100vh - 70px); \n    }\n\n    .map-area {\n      /* This tells the map's container to grow and fill all available space\n         inside the .dashboard-container. */\n      flex-grow: 1;\n      background-color: #e0e0e0; /* Fallback color for debugging */\n    }\n\n    /* Styles for the control panel at the bottom */\n    .controls-area {\n      flex-shrink: 0;\n      padding: 1.5rem;\n      background-color: #ffffff;\n      box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.08);\n      border-top-left-radius: 20px;\n      border-top-right-radius: 20px;\n      z-index: 1000; /* Ensure it's above the map */\n    }\n    \n    /* ... other control panel styles ... */\n    .before-trip-controls { display: flex; flex-direction: column; gap: 1rem; }\n    .destination-input { width: 100%; padding: 0.8rem 1rem; font-size: 1rem; border: 1px solid #d1d5db; border-radius: 8px; box-sizing: border-box; }\n    .start-trip-button { width: 100%; padding: 1rem; font-size: 1.1rem; font-weight: bold; color: white; background-color: #6366f1; border: none; border-radius: 8px; cursor: pointer; transition: background-color 0.3s; }\n    .start-trip-button:hover { background-color: #4f46e5; }\n  `\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n// --- MARKER ICON FIX ---\n// This is a known issue with React-Leaflet. This code fixes the missing marker icons.\n_c = DashboardStyles;\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// --- HELPER COMPONENT ---\n// This small component ensures the map recenters when the position state changes.\nconst RecenterAutomatically = ({\n  position\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    map.setView([position.lat, position.lng]);\n  }, [position, map]);\n  return null;\n};\n\n// --- MAIN DASHBOARD COMPONENT ---\n_s(RecenterAutomatically, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = RecenterAutomatically;\nconst Dashboard = () => {\n  _s2();\n  const [isTripActive, setIsTripActive] = useState(false);\n  const [destination, setDestination] = useState(\"\");\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 26.7606,\n    lng: 83.3732\n  }); // Default: Gorakhpur\n\n  // This effect runs once to get the user's initial location.\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCurrentPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, () => console.error(\"Could not get user's location.\"));\n  }, []); // Empty array means it runs only on the first render.\n\n  const handleStartTrip = () => {\n    setIsTripActive(true);\n    alert(\"Your SafeWalk trip has started. Your location is being monitored.\");\n    // In a real app, here you would start sending location updates to your backend via Socket.IO\n  };\n  const handleEndTrip = () => {\n    setIsTripActive(false);\n    alert(\"Your trip has safely ended.\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-area\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [currentPosition.lat, currentPosition.lng],\n          zoom: 15,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [currentPosition.lat, currentPosition.lng]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RecenterAutomatically, {\n            position: currentPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-area\",\n        children: isTripActive ?\n        /*#__PURE__*/\n        // In the future, your <TripStatusPanel /> component will go here\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Trip in Progress...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEndTrip,\n            style: {\n              width: '100%',\n              padding: '1rem',\n              color: 'white',\n              backgroundColor: '#ef4444',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer'\n            },\n            children: \"End Trip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"before-trip-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter optional destination...\",\n            className: \"destination-input\",\n            value: destination,\n            onChange: e => setDestination(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-trip-button\",\n            onClick: handleStartTrip,\n            children: \"Start SafeWalk Trip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(Dashboard, \"QhcJw6P9te2i62fB8uu6VYv3VjE=\");\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DashboardStyles\");\n$RefreshReg$(_c2, \"RecenterAutomatically\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","useMap","L","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardStyles","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","RecenterAutomatically","position","_s","map","setView","lat","lng","_c2","Dashboard","_s2","isTripActive","setIsTripActive","destination","setDestination","currentPosition","setCurrentPosition","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","console","error","handleStartTrip","alert","handleEndTrip","className","center","zoom","style","height","width","url","attribution","onClick","padding","color","backgroundColor","border","borderRadius","cursor","type","placeholder","value","onChange","e","target","_c3","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/shesecure/client/src/Pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\n// --- STYLES (Self-Contained) ---\r\n// By embedding the styles here, we guarantee they are loaded and applied correctly.\r\nconst DashboardStyles = () => (\r\n  <style>{`\r\n    .dashboard-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      /* This is the crucial line: it makes the container fill the vertical space\r\n         left by your 70px header. */\r\n      height: calc(100vh - 70px); \r\n    }\r\n\r\n    .map-area {\r\n      /* This tells the map's container to grow and fill all available space\r\n         inside the .dashboard-container. */\r\n      flex-grow: 1;\r\n      background-color: #e0e0e0; /* Fallback color for debugging */\r\n    }\r\n\r\n    /* Styles for the control panel at the bottom */\r\n    .controls-area {\r\n      flex-shrink: 0;\r\n      padding: 1.5rem;\r\n      background-color: #ffffff;\r\n      box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.08);\r\n      border-top-left-radius: 20px;\r\n      border-top-right-radius: 20px;\r\n      z-index: 1000; /* Ensure it's above the map */\r\n    }\r\n    \r\n    /* ... other control panel styles ... */\r\n    .before-trip-controls { display: flex; flex-direction: column; gap: 1rem; }\r\n    .destination-input { width: 100%; padding: 0.8rem 1rem; font-size: 1rem; border: 1px solid #d1d5db; border-radius: 8px; box-sizing: border-box; }\r\n    .start-trip-button { width: 100%; padding: 1rem; font-size: 1.1rem; font-weight: bold; color: white; background-color: #6366f1; border: none; border-radius: 8px; cursor: pointer; transition: background-color 0.3s; }\r\n    .start-trip-button:hover { background-color: #4f46e5; }\r\n  `}</style>\r\n);\r\n\r\n// --- MARKER ICON FIX ---\r\n// This is a known issue with React-Leaflet. This code fixes the missing marker icons.\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// --- HELPER COMPONENT ---\r\n// This small component ensures the map recenters when the position state changes.\r\nconst RecenterAutomatically = ({ position }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    map.setView([position.lat, position.lng]);\r\n  }, [position, map]);\r\n  return null;\r\n};\r\n\r\n\r\n// --- MAIN DASHBOARD COMPONENT ---\r\nconst Dashboard = () => {\r\n  const [isTripActive, setIsTripActive] = useState(false);\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 26.7606, lng: 83.3732 }); // Default: Gorakhpur\r\n\r\n  // This effect runs once to get the user's initial location.\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setCurrentPosition({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      },\r\n      () => console.error(\"Could not get user's location.\")\r\n    );\r\n  }, []); // Empty array means it runs only on the first render.\r\n\r\n  const handleStartTrip = () => {\r\n    setIsTripActive(true);\r\n    alert(\"Your SafeWalk trip has started. Your location is being monitored.\");\r\n    // In a real app, here you would start sending location updates to your backend via Socket.IO\r\n  };\r\n\r\n  const handleEndTrip = () => {\r\n    setIsTripActive(false);\r\n    alert(\"Your trip has safely ended.\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DashboardStyles />\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"map-area\">\r\n          <MapContainer center={[currentPosition.lat, currentPosition.lng]} zoom={15} style={{ height: '100%', width: '100%' }}>\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={[currentPosition.lat, currentPosition.lng]} />\r\n            <RecenterAutomatically position={currentPosition} />\r\n          </MapContainer>\r\n        </div>\r\n\r\n        <div className=\"controls-area\">\r\n          {isTripActive ? (\r\n            // In the future, your <TripStatusPanel /> component will go here\r\n            <div>\r\n              <h3>Trip in Progress...</h3>\r\n              <button onClick={handleEndTrip} style={{width: '100%', padding: '1rem', color: 'white', backgroundColor: '#ef4444', border: 'none', borderRadius: '8px', cursor: 'pointer'}}>End Trip</button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"before-trip-controls\">\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter optional destination...\" \r\n                className=\"destination-input\"\r\n                value={destination}\r\n                onChange={(e) => setDestination(e.target.value)}\r\n              />\r\n              <button className=\"start-trip-button\" onClick={handleStartTrip}>\r\n                Start SafeWalk Trip\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}