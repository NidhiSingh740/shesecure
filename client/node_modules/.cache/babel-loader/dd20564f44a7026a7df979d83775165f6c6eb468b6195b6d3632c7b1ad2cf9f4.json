{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\shesecure\\\\client\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// --- STYLE & SCRIPT LOADER FUNCTIONS ---\n// To resolve the build errors, we will load the Leaflet library directly from a CDN\n// instead of using npm imports. This is a robust method that works in any environment.\n\n// Injects the required Leaflet CSS into the document's head\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadLeafletCSS = () => {\n  if (!document.getElementById('leaflet-css')) {\n    const link = document.createElement('link');\n    link.id = 'leaflet-css';\n    link.rel = 'stylesheet';\n    link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n    link.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';\n    link.crossOrigin = '';\n    document.head.appendChild(link);\n  }\n};\n\n// Injects the Leaflet JavaScript library and calls a function when it's ready\nconst loadLeafletScript = callback => {\n  if (window.L) {\n    // Check if Leaflet is already loaded\n    callback();\n    return;\n  }\n  const script = document.createElement('script');\n  script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n  script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';\n  script.crossOrigin = '';\n  script.onload = () => callback();\n  document.head.appendChild(script);\n};\n\n// --- MAIN MAPVIEW COMPONENT ---\nconst MapView = ({\n  isTripActive\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerInstanceRef = useRef(null);\n  const [isMapReady, setIsMapReady] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 26.7606,\n    lng: 83.3732\n  }); // Default: Gorakhpur\n\n  // Effect 1: Load CSS and the Leaflet script\n  useEffect(() => {\n    loadLeafletCSS();\n    loadLeafletScript(() => {\n      setIsMapReady(true);\n    });\n  }, []);\n\n  // Effect 2: Get user's current location\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const newPos = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      setCurrentPosition(newPos);\n    }, () => console.error(\"Could not get user's location.\"));\n  }, [isTripActive]);\n\n  // Effect 3: Initialize the map and marker, and update them when the position changes.\n  useEffect(() => {\n    // Only run this if the script is loaded and the container div exists\n    if (isMapReady && mapContainerRef.current) {\n      const L = window.L; // Leaflet is now available on the window object\n\n      // If the map hasn't been created yet, initialize it.\n      if (!mapInstanceRef.current) {\n        mapInstanceRef.current = L.map(mapContainerRef.current).setView([currentPosition.lat, currentPosition.lng], 15);\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(mapInstanceRef.current);\n\n        // Create a custom icon to avoid issues with default icon paths\n        const customIcon = new L.Icon({\n          iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n          iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n          iconSize: [25, 41],\n          iconAnchor: [12, 41],\n          popupAnchor: [1, -34],\n          shadowSize: [41, 41]\n        });\n        markerInstanceRef.current = L.marker([currentPosition.lat, currentPosition.lng], {\n          icon: customIcon\n        }).addTo(mapInstanceRef.current);\n      } else {\n        // If the map already exists, just update the view and marker position.\n        mapInstanceRef.current.setView([currentPosition.lat, currentPosition.lng]);\n        markerInstanceRef.current.setLatLng([currentPosition.lat, currentPosition.lng]);\n      }\n    }\n  }, [isMapReady, currentPosition]); // Re-run this effect when map is ready or position changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: !isMapReady && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        paddingTop: '2rem'\n      },\n      children: \"Loading Map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"bJoeVsPpUuIfJzgh+6kFyUcgVQc=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","loadLeafletCSS","document","getElementById","link","createElement","id","rel","href","integrity","crossOrigin","head","appendChild","loadLeafletScript","callback","window","L","script","src","onload","MapView","isTripActive","_s","mapContainerRef","mapInstanceRef","markerInstanceRef","isMapReady","setIsMapReady","currentPosition","setCurrentPosition","lat","lng","navigator","geolocation","getCurrentPosition","position","newPos","coords","latitude","longitude","console","error","current","map","setView","tileLayer","attribution","addTo","customIcon","Icon","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","marker","icon","setLatLng","ref","style","width","height","children","textAlign","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/shesecure/client/src/components/MapView.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// --- STYLE & SCRIPT LOADER FUNCTIONS ---\r\n// To resolve the build errors, we will load the Leaflet library directly from a CDN\r\n// instead of using npm imports. This is a robust method that works in any environment.\r\n\r\n// Injects the required Leaflet CSS into the document's head\r\nconst loadLeafletCSS = () => {\r\n  if (!document.getElementById('leaflet-css')) {\r\n    const link = document.createElement('link');\r\n    link.id = 'leaflet-css';\r\n    link.rel = 'stylesheet';\r\n    link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\r\n    link.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';\r\n    link.crossOrigin = '';\r\n    document.head.appendChild(link);\r\n  }\r\n};\r\n\r\n// Injects the Leaflet JavaScript library and calls a function when it's ready\r\nconst loadLeafletScript = (callback) => {\r\n  if (window.L) { // Check if Leaflet is already loaded\r\n    callback();\r\n    return;\r\n  }\r\n  const script = document.createElement('script');\r\n  script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\r\n  script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';\r\n  script.crossOrigin = '';\r\n  script.onload = () => callback();\r\n  document.head.appendChild(script);\r\n};\r\n\r\n// --- MAIN MAPVIEW COMPONENT ---\r\nconst MapView = ({ isTripActive }) => {\r\n  const mapContainerRef = useRef(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const markerInstanceRef = useRef(null);\r\n  const [isMapReady, setIsMapReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 26.7606, lng: 83.3732 }); // Default: Gorakhpur\r\n\r\n  // Effect 1: Load CSS and the Leaflet script\r\n  useEffect(() => {\r\n    loadLeafletCSS();\r\n    loadLeafletScript(() => {\r\n      setIsMapReady(true);\r\n    });\r\n  }, []);\r\n\r\n  // Effect 2: Get user's current location\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const newPos = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        setCurrentPosition(newPos);\r\n      },\r\n      () => console.error(\"Could not get user's location.\")\r\n    );\r\n  }, [isTripActive]);\r\n\r\n  // Effect 3: Initialize the map and marker, and update them when the position changes.\r\n  useEffect(() => {\r\n    // Only run this if the script is loaded and the container div exists\r\n    if (isMapReady && mapContainerRef.current) {\r\n      const L = window.L; // Leaflet is now available on the window object\r\n\r\n      // If the map hasn't been created yet, initialize it.\r\n      if (!mapInstanceRef.current) {\r\n        mapInstanceRef.current = L.map(mapContainerRef.current).setView([currentPosition.lat, currentPosition.lng], 15);\r\n        \r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(mapInstanceRef.current);\r\n        \r\n        // Create a custom icon to avoid issues with default icon paths\r\n        const customIcon = new L.Icon({\r\n            iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n            iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41]\r\n        });\r\n        \r\n        markerInstanceRef.current = L.marker([currentPosition.lat, currentPosition.lng], { icon: customIcon }).addTo(mapInstanceRef.current);\r\n\r\n      } else {\r\n        // If the map already exists, just update the view and marker position.\r\n        mapInstanceRef.current.setView([currentPosition.lat, currentPosition.lng]);\r\n        markerInstanceRef.current.setLatLng([currentPosition.lat, currentPosition.lng]);\r\n      }\r\n    }\r\n  }, [isMapReady, currentPosition]); // Re-run this effect when map is ready or position changes\r\n\r\n  return (\r\n    <div ref={mapContainerRef} style={{ width: '100%', height: '100%' }}>\r\n      {!isMapReady && <p style={{ textAlign: 'center', paddingTop: '2rem' }}>Loading Map...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}